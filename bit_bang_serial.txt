6800 Bit Banged Serial I/O at 9,600 Baud
========================================

; Output port bit
OUTMASK EQU     $01             ; Bit 0 -- DO NOT CHANGE!

; Input port bit
INMASK  EQU     $02             ; Bit 1

; PIA Port A
PORT    EQU     $8004

; Working variables
TMP     EQU     $0080           ; Must be direct page
MASK    EQU     $0080           ; Can be anywhere


; Various Delays (invoked with JSR)
; for one cycle less, invoke with BSR
D34:    NOP                     ;  2
D32:    NOP                     ;  2
D30:    NOP                     ;  2
D28:    NOP                     ;  2
D26:    NOP                     ;  2
D24:    NOP                     ;  2
D22:    NOP                     ;  2
D20:    NOP                     ;  2
D18:    NOP                     ;  2
D16:    NOP                     ;  2
D14:    RTS                     ;  5
                                ;  9 (JSR) or 8 (BSR)
; 27 bytes

OUTCH9600:
        PSHA
        PSHB
        LDAB    #10             ; total of 10 bits to send
        CLC                     ; start bit
LOOP:
        PSHB                    ;  4
        LDAB    PORT            ;  4
        ANDB    #$FF-OUTMASK    ;  2
        ADCB    #$00            ;  2 - C = bit to send
        STAB    PORT            ;  5
        PULB                    ;  4
        SEC                     ;  2 - stop bit
        RORA                    ;  2 - shift next bit into C
        DECB                    ;  2
        BSR     D34             ; 33
        BNE     LOOP            ;  4
                                ; 64 cycles in loop = 9,600 baud
        PULB
        PULA
        RTS

; 44 bytes

INCH9600V1:
        PSHB
        LDAA    #$80            ; b7 shifted down acts as a counter
        LDAB    #INMASK
START0: BITB    PORT            ; wait for line idle
        BEQ     START0          ;
START1: BITB    PORT            ; wait for start bit
        BNE     START1          ;  4
        JSR     D20             ; 20
        BITB    PORT            ;  4 - confirm start bit 28->36 cycle after edge
        BNE     START1          ;  4
        JSR     D30             ; 30
LOOP:   JSR     D26             ; 26
        LDAB    PORT            ;  4 - sample data bit 64 cycles later
        ANDB    #INMASK         ;  2
        ADDB    #$100-INMASK    ;  2
        RORA                    ;  2
        JSR     D24             ; 24
        BCC     LOOP            ;  4
                                ; 64 cycles in loop = 9,600 baud
        PULB
        RTS

; 46 bytes

INCH9600V2:
        LDAA    #$80            ; b7 shifted down acts as a counter
        PSHA
        LDAA    #INMASK
START0: BITA    PORT            ; wait for line idle
        BEQ     START0          ;
START1: BITA    PORT            ; wait for start bit
        BNE     START1          ;  4
        JSR     D20             ; 20
        BITA    PORT            ;  4 - confirm start bit 28->36 cycle after edge
        BNE     START1          ;  4
        JSR     D28             ; 28
LOOP:   JSR     D28             ; 28
        LDAA    PORT            ;  4 - sample data bit 64 cycles later
        ANDA    #INMASK         ;  2
        ADDA    #$100-INMASK    ;  2
        PULA                    ;  4
        RORA                    ;  2
        PSHA                    ;  4
        JSR     D14             ; 14
        BCC     LOOP            ;  4
                                ; 64 cycles in loop = 9,600 baud
        PULA
        RTS



6800 Bit Banged Serial I/O at 19,200 Baud
=========================================

; Uses ZP (or ABS) TMP
; 29 bytes

OUTCH19200V1:
        PSHA
        PSHB
        STAA    TMP
        LDAA    #10             ; total of 10 bits to send
        CLC                     ; start bit
LOOP:
        LDAB    PORT            ;  4
        ANDB    #$FF-OUTMASK    ;  2
        ADCB    #$00            ;  2 - C = bit to send
        STAB    PORT            ;  5
        STAB    PORT            ;  5 - waste 5 cycles
        SEC                     ;  2 - stop bit
        ROR     TMP             ;  6 - shift next bit into C
        DECA                    ;  2
        BNE     LOOP            ;  4
                                ; 32 cycles in loop = 19,200 baud
        PULB
        PULA
        RTS

; Uses a ZP mask
; 29 bytes

OUTCH19200V2:
        PSHA
        PSHB
        LDAB    #$FF-OUTMASK
        STAB    MASK
        LDAB    #10             ; total of 10 bits to send
        CLC                     ; start bit
LOOP:
        PSHB                    ;  4
        LDAB    PORT            ;  4
        ANDB    MASK            ;  3
        ADCB    #$00            ;  2 - C = bit to send
        STAB    PORT            ;  5
        PULB                    ;  4
        SEC                     ;  2 - stop bit
        RORA                    ;  2 - shift next bit into C
        DECB                    ;  2
        BNE     LOOP            ;  4
                                ; 32 cycles in loop = 19,200 baud
        PULB
        PULA
        RTS


; Uses ROL PORT (euch!)
; 19 bytes

OUTCH19200V3:
        PSHA
        PSHB
        LDAB    #10             ; total of 10 bits to send
        CLC                     ; start bit
LOOP:
        ROL     PORT            ;  6
        JSR     D16             ; 16
        SEC                     ;  2 - stop bit
        RORA                    ;  2 - shift next bit into C
        DECB                    ;  2
        BNE     LOOP            ;  4
                                ; 32 cycles in loop = 19,200 baud
        PULB
        PULA
        RTS


; 40 bytes

INCH19200V1:
        PSHB
        LDAA    #$80            ; b7 shifted down acts as a counter
        LDAB    #INMASK
START0: BITB    PORT            ; wait for line idle
        BEQ     START0          ;
START1: BITB    PORT            ; wait for start bit
        BNE     START1          ;  4
        NOP                     ;  2
        NOP                     ;  2
        BITB    PORT            ;  4 - confirm start bit 12->20 cycle after edge
        BNE     START1          ;  4
        JSR     D24             ; 24
LOOP:   LDAB    PORT            ;  4 - sample data bit 32 cycles later
        ANDB    #INMASK         ;  2
        ADDB    #$100-INMASK    ;  2
        RORA                    ;  2
        JSR     D18             ; 18
        BCC     LOOP            ;  4
                                ; 32 loop in cycles = 19,200 baud
        PULB
        RTS

; 42 bytes

INCH19200V2:
        LDAA    #$80            ; b7 shifted down acts as a counter
        PSHA
        LDAA    #INMASK
START0: BITA    PORT            ; wait for line idle
        BEQ     START0          ;
START1: BITA    PORT            ; wait for start bit
        BNE     START1          ;  4
        NOP                     ;  2
        NOP                     ;  2
        BITA    PORT            ;  4 - confirm start bit 12->20 cycle after edge
        BNE     START1          ;  4
        JSR     D24             ; 24
LOOP:   LDAA    PORT            ;  4 - sample data bit 32 cycles later
        ANDA    #INMASK         ;  2
        ADDA    #$100-INMASK    ;  2
        PULA                    ;  4
        RORA                    ;  2
        PSHA                    ;  4
        PULA                    ;  4
        PSHA                    ;  4
        NOP                     ;  2
        BCC     LOOP            ;  4
                                ; 32 loop in cycles = 19,200 baud
        PULA
        RTS


; 44 bytes

INCH19200V3:
        LDAA    #$80            ; b7 shifted down acts as a counter
        STAA    tmp
        PSHA
        LDAA    #INMASK
START0: BITA    PORT            ; wait for line idle
        BEQ     START0          ;
START1: BITA    PORT            ; wait for start bit
        BNE     START1          ;  4
        NOP                     ;  2
        NOP                     ;  2
        BITA    PORT            ;  4 - confirm start bit 12->20 cycle after edge
        BNE     START1          ;  4
        JSR     D24             ; 24
LOOP:   LDAA    PORT            ;  4 - sample data bit 32 cycles later
        ANDA    #INMASK         ;  2
        ADDA    #$100-INMASK    ;  2
        ROR     tmp             ;  6
        JSR     D14             ; 14
        BCC     LOOP            ;  4
                                ; 32 loop in cycles = 19,200 baud
        LDAA    tmp
        RTS




6800 Bit Banged Serial I/O at 38,400 Baud
=========================================


OUTCH38400V1:
        PSHA
        PSHB
        LDAB    #10             ; total of 10 bits to send
        CLC                     ; start bit
LOOP:
        ROL     PORT            ;  6
        SEC                     ;  2 - stop bit
        RORA                    ;  2 - shift next bit into C
        DECB                    ;  2
        BNE     LOOP            ;  4
                                ; 16 cycles in loop = 38,400 baud
        PULB
        PULA
        RTS

INCH38400V1:
        PSHB
        LDAA    #$80            ; b7 shifted down acts as a counter
        LDAB    #INMASK
START0: BITB    PORT            ; wait for line idle
        BEQ     START0          ;
START1: BITB    PORT            ; wait for start bit (the samplimg error here is 8 cycles = half a bit)
        BNE     START1          ;  4
        PSHA                    ;  4
        PULA                    ;  4
        NOP                     ;  2
        NOP                     ;  2
LOOP:   LDAB    PORT            ;  4 - sample data bit 20->28 cycles later
        ANDB    #INMASK         ;  2
        ADDB    #$100-INMASK    ;  2
        RORA                    ;  2
        NOP                     ;  2
        BCC     LOOP            ;  4
                                ; 16 loop in cycles = 38,400 baud
        PULB
        RTS












End of GETCHAR

        LDAB    PORT            ;  4 - sample data bit 64 cycles later

------------------------------------------

        ANDB    #INMASK         ;  2
        ADDB    #$100-INMASK    ;  2
        RORA                    ;  2
        JSR     D24             ; 24 <<<<<<<<< Can be eliminated
        BCC     LOOP            ;  4
        PULB                    ;  4
        RTS                     ;  5  (43)

End of CONVHEX

        SUBA    #$30            ; 2
        BMI     QUESTN          ; 4
        CMPA    #$09            ; 2
        BLE     RETURN2         ; 4
        CMPA    #$11            ; 2
        BMI     INCSTACK        ; 4
        CMPA    #$16            ; 2
        BGT     INCSTACK        ; 4
        SUBA    #$07            ; 2
RETURN2 RTS                     ; 5  (31)


End of GETHEX

        ABA                     ; 2
        TAB                     ; 2
        ADDB    TEMPA           ; 4
        STAB    TEMPA           ; 5
        RTS                     ; 5  (16)


SERC LOOP
        DEC     BYTESTORE       ; 6
        BEQ     INCOUNT         ; 4
        STAA    0,X             ; 6
        CMPA    0,X             ; 6
        BNE     QUESTN          ; 4
GETCNT  BSR     GETHEX          ; 8

GETHEX  BSR     CONVHEX         ; 8

CONVHEX BSR     GETCHAR         ; 8

GETCHAR JMP     SERIALINCH      ; 3 (53) <<<<< JMP can be eliminated

INCH9600:
        PSHB                    ; 8
        LDAA    #$80            ; 2
        LDAB    #INMASK         ; 2
START0: BITB    PORT            ; 4 (16)

total: 159 = 2.48 bit times

This is from middle of D7 to end of 2nd stop bit. So might just miss line idle.

D24 can be eliminated, as can JMP SERIALINCH

improved total: 132 = 2.06 bit times

This is from middle of D7 to missle of 2nd stop bit. So should catch line idle


------------------------------------------------------

        BEQ     START0          ;
START1: BITB    PORT            ; wait for start bit
        BNE     START1          ;  4
        JSR     D20             ; 20
        BITB    PORT            ;  4 - confirm start bit 28->36 cycle after edge
        BNE     START1          ;  4
        JSR     D30             ; 30
LOOP:   JSR     D26             ; 26
